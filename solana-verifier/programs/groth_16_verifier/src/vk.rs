use anchor_lang::prelude::*;
use anchor_lang::{AnchorDeserialize, AnchorSerialize};

const G1_LEN: usize = 64;
const G2_LEN: usize = 128;
const IC_LEN: usize = 6;

#[derive(Debug, Clone, PartialEq, Eq, AnchorDeserialize, AnchorSerialize)]
pub struct VerificationKey {
    pub nr_pubinputs: u32,
    pub vk_alpha_g1: [u8; G1_LEN],
    pub vk_beta_g2: [u8; G2_LEN],
    pub vk_gamma_g2: [u8; G2_LEN],
    pub vk_delta_g2: [u8; G2_LEN],
    // TODO: This was `pub vk_ic: &'a [[u8; G1_LEN]], which should be more efficient, unsure if we can use
    // the Anchor Zero Copy data structure to deal with data lifetimes, makes sense to keep as vector until
    // further testing
    pub vk_ic: [[u8; G1_LEN]; IC_LEN],
}

pub const VK_ALPHA_G1: [u8; G1_LEN] = [
    0xe2, 0xf2, 0x6d, 0xbe, 0xa2, 0x99, 0xf5, 0x22, 0x3b, 0x64, 0x6c, 0xb1, 0xfb, 0x33, 0xea, 0xdb,
    0x05, 0x9d, 0x94, 0x07, 0x55, 0x9d, 0x74, 0x41, 0xdf, 0xd9, 0x02, 0xe3, 0xa7, 0x9a, 0x4d, 0x2d,
    0x26, 0x19, 0x4d, 0x00, 0xff, 0xca, 0x76, 0xf0, 0x01, 0x03, 0x23, 0x19, 0x0a, 0x83, 0x89, 0xce,
    0x45, 0xe3, 0x9f, 0x20, 0x60, 0xec, 0xd8, 0x61, 0xb0, 0xce, 0x37, 0x3c, 0x50, 0xdd, 0xbe, 0x14,
];

pub const VK_BETA_G2: [u8; G2_LEN] = [
    0xab, 0xb7, 0x3d, 0xc1, 0x7f, 0xbc, 0x13, 0x02, 0x1e, 0x24, 0x71, 0xe0, 0xc0, 0x8b, 0xd6, 0x7d,
    0x84, 0x01, 0xf5, 0x2b, 0x73, 0xd6, 0xd0, 0x74, 0x83, 0x79, 0x4c, 0xad, 0x47, 0x78, 0x18, 0x0e,
    0x0c, 0x06, 0xf3, 0x3b, 0xbc, 0x4c, 0x79, 0xa9, 0xca, 0xde, 0xf2, 0x53, 0xa6, 0x80, 0x84, 0xd3,
    0x82, 0xf1, 0x77, 0x88, 0xf8, 0x85, 0xc9, 0xaf, 0xd1, 0x76, 0xf7, 0xcb, 0x2f, 0x03, 0x67, 0x09,
    0xc8, 0xce, 0xd0, 0x7a, 0x54, 0x06, 0x7f, 0xd5, 0xa9, 0x05, 0xea, 0x3e, 0xc6, 0xb7, 0x96, 0xf8,
    0x92, 0x91, 0x2f, 0x4d, 0xd2, 0x23, 0x31, 0x31, 0xc7, 0xa8, 0x57, 0xa4, 0xb1, 0xc1, 0x39, 0x17,
    0xa7, 0x46, 0x23, 0x11, 0x4d, 0x9a, 0xa6, 0x9d, 0x37, 0x0d, 0x7a, 0x6b, 0xc4, 0xde, 0xfd, 0xaa,
    0x3c, 0x8c, 0x3f, 0xd9, 0x47, 0xe8, 0xf5, 0x99, 0x4a, 0x70, 0x8a, 0xe0, 0xd1, 0xfb, 0x4c, 0x30,
];

pub const VK_GAMMA_G2: [u8; G2_LEN] = [
    0xed, 0xf6, 0x92, 0xd9, 0x5c, 0xbd, 0xde, 0x46, 0xdd, 0xda, 0x5e, 0xf7, 0xd4, 0x22, 0x43, 0x67,
    0x79, 0x44, 0x5c, 0x5e, 0x66, 0x00, 0x6a, 0x42, 0x76, 0x1e, 0x1f, 0x12, 0xef, 0xde, 0x00, 0x18,
    0xc2, 0x12, 0xf3, 0xae, 0xb7, 0x85, 0xe4, 0x97, 0x12, 0xe7, 0xa9, 0x35, 0x33, 0x49, 0xaa, 0xf1,
    0x25, 0x5d, 0xfb, 0x31, 0xb7, 0xbf, 0x60, 0x72, 0x3a, 0x48, 0x0d, 0x92, 0x93, 0x93, 0x8e, 0x19,
    0xaa, 0x7d, 0xfa, 0x66, 0x01, 0xcc, 0xe6, 0x4c, 0x7b, 0xd3, 0x43, 0x0c, 0x69, 0xe7, 0xd1, 0xe3,
    0x8f, 0x40, 0xcb, 0x8d, 0x80, 0x71, 0xab, 0x4a, 0xeb, 0x6d, 0x8c, 0xdb, 0xa5, 0x5e, 0xc8, 0x12,
    0x5b, 0x97, 0x22, 0xd1, 0xdc, 0xda, 0xac, 0x55, 0xf3, 0x8e, 0xb3, 0x70, 0x33, 0x31, 0x4b, 0xbc,
    0x95, 0x33, 0x0c, 0x69, 0xad, 0x99, 0x9e, 0xec, 0x75, 0xf0, 0x5f, 0x58, 0xd0, 0x89, 0x06, 0x09,
];

pub const VK_DELTA_G2: [u8; G2_LEN] = [
    0x33, 0x03, 0x3e, 0x7f, 0xea, 0x1f, 0x40, 0x60, 0x4e, 0xaa, 0xcf, 0x69, 0x9d, 0x4b, 0xe9, 0xaa,
    0xcc, 0x57, 0x70, 0x54, 0xa0, 0xdb, 0x22, 0xd9, 0x12, 0x9a, 0x17, 0x28, 0xff, 0x85, 0xa0, 0x1a,
    0x1c, 0x3a, 0xf8, 0x29, 0xb6, 0x2b, 0xf4, 0x91, 0x4c, 0x0b, 0xcf, 0x2c, 0x81, 0xa4, 0xbd, 0x57,
    0x71, 0x90, 0xef, 0xf5, 0xf1, 0x94, 0xee, 0x9b, 0xac, 0x95, 0xfa, 0xef, 0xd5, 0x3c, 0xb0, 0x03,
    0xd3, 0xc6, 0x3f, 0x7d, 0x18, 0xdf, 0x42, 0x71, 0x1c, 0xea, 0x2f, 0x9e, 0xd5, 0x74, 0x2d, 0x0b,
    0x2d, 0x83, 0x18, 0x83, 0x17, 0x67, 0xe8, 0x37, 0xe8, 0x57, 0xf7, 0xcb, 0x1f, 0xf3, 0x60, 0x1e,
    0x62, 0x07, 0x03, 0x0d, 0x94, 0xd2, 0x91, 0x5c, 0xca, 0x28, 0x72, 0xfb, 0x6e, 0x36, 0x68, 0xa8,
    0xae, 0xc9, 0x18, 0xd5, 0x46, 0x08, 0x49, 0xf6, 0x19, 0x0b, 0x20, 0x4f, 0x13, 0x10, 0x0c, 0x11,
];

pub const VK_IC: [[u8; G1_LEN]; IC_LEN] = [
    [
        0xe4, 0x3b, 0xdc, 0x65, 0x5d, 0x0f, 0x9d, 0x73, 0x05, 0x35, 0x55, 0x4d, 0x9c, 0xaa, 0x61,
        0x1d, 0xdd, 0x15, 0x2c, 0x08, 0x1a, 0x06, 0xa9, 0x32, 0xa8, 0xe1, 0xd5, 0xdc, 0x25, 0x9a,
        0xac, 0x12, 0xd4, 0xac, 0x80, 0xe9, 0x0e, 0xc6, 0x23, 0x2b, 0xee, 0x3e, 0x0f, 0xd3, 0xa2,
        0xf5, 0x6f, 0x10, 0x69, 0x85, 0x89, 0x1c, 0x91, 0x31, 0x17, 0xd9, 0x7a, 0xbe, 0x1e, 0x58,
        0x44, 0xa7, 0x5a, 0x02,
    ],
    [
        0x3f, 0x42, 0xa1, 0x88, 0xf6, 0x83, 0xd8, 0x69, 0x87, 0x3c, 0xcc, 0x4c, 0x11, 0x94, 0x42,
        0xe5, 0x7b, 0x05, 0x6e, 0x03, 0xe2, 0xfa, 0x92, 0xf2, 0x02, 0x8c, 0x97, 0xbc, 0x20, 0xb9,
        0x07, 0x07, 0x42, 0x66, 0xff, 0x87, 0x07, 0x65, 0xa4, 0x82, 0x37, 0x38, 0x03, 0xc2, 0x55,
        0x55, 0xd5, 0xd2, 0xac, 0x81, 0x34, 0xf6, 0x7b, 0x35, 0xbc, 0xf7, 0x54, 0x95, 0x58, 0xb7,
        0x94, 0xa0, 0x32, 0x2e,
    ],
    [
        0x47, 0xc3, 0x0f, 0x85, 0x44, 0x46, 0x97, 0xfd, 0xf4, 0x36, 0xe3, 0x48, 0x71, 0x1c, 0x01,
        0x11, 0x15, 0x96, 0x3f, 0x85, 0x51, 0x97, 0x24, 0x3e, 0x4b, 0x39, 0xe6, 0xcb, 0xe2, 0x36,
        0xca, 0x0b, 0x8b, 0x9b, 0xdf, 0xfc, 0xb1, 0x53, 0xc1, 0x09, 0xf4, 0xf7, 0xb8, 0x6d, 0xfa,
        0xd4, 0x35, 0x84, 0x2a, 0x4e, 0x71, 0x68, 0x3d, 0xfa, 0x29, 0x37, 0x3a, 0xcf, 0x48, 0xcf,
        0x9a, 0x7c, 0xde, 0x2e,
    ],
    [
        0xa7, 0xf2, 0x04, 0x2e, 0x11, 0xf9, 0x25, 0x5a, 0xfb, 0xb6, 0xc6, 0xe2, 0xc3, 0xac, 0xcb,
        0x88, 0xe4, 0x01, 0xf2, 0xaa, 0xc2, 0x1c, 0x09, 0x7c, 0x92, 0xb3, 0xfb, 0xdb, 0x99, 0xf9,
        0x8a, 0x1b, 0xd6, 0xcc, 0x9c, 0x67, 0x4f, 0xf0, 0x9c, 0x3e, 0x7f, 0x15, 0x60, 0x1a, 0xd8,
        0x86, 0xd5, 0x50, 0xc8, 0x81, 0x2a, 0x19, 0x9f, 0x94, 0x22, 0x57, 0x6f, 0x1b, 0x2e, 0xa9,
        0x6a, 0xa2, 0x91, 0x2b,
    ],
    [
        0x0d, 0xcd, 0x6c, 0x07, 0x5a, 0xda, 0x6e, 0xd0, 0xdd, 0xfe, 0xce, 0x1d, 0x4a, 0x2d, 0x00,
        0x5f, 0x61, 0xa7, 0xd5, 0xdf, 0x0b, 0x75, 0xc1, 0x8a, 0x5b, 0x23, 0x74, 0xd6, 0x4e, 0x49,
        0x5f, 0x2b, 0x82, 0x5e, 0xad, 0xb2, 0x65, 0x16, 0xe7, 0xc5, 0x12, 0xf9, 0x14, 0x8f, 0xf8,
        0x6f, 0xa7, 0xb8, 0x63, 0xa8, 0xb9, 0xcb, 0x7f, 0x81, 0xba, 0xcb, 0xb9, 0xaa, 0x20, 0x20,
        0xad, 0x20, 0xe5, 0x2f,
    ],
    [
        0x93, 0xd4, 0xc4, 0xb1, 0x20, 0x03, 0x94, 0xd5, 0x25, 0x3c, 0xce, 0x2f, 0x25, 0xa5, 0x9b,
        0x86, 0x2e, 0xe8, 0xe4, 0xcd, 0x43, 0x68, 0x66, 0x03, 0xfa, 0xa0, 0x9d, 0x5d, 0x0d, 0x3c,
        0x1c, 0x0f, 0x09, 0xe8, 0x69, 0x0b, 0xbd, 0x01, 0xaa, 0x87, 0x82, 0xf6, 0x08, 0x36, 0x2f,
        0xbb, 0xc8, 0x8b, 0x2d, 0x48, 0x07, 0xb3, 0x07, 0x0d, 0x8c, 0xfe, 0xf6, 0x25, 0xf4, 0x74,
        0xff, 0xfc, 0x4b, 0x21,
    ],
];

pub const VERIFICATION_KEY: VerificationKey = VerificationKey {
    nr_pubinputs: 5,
    vk_alpha_g1: VK_ALPHA_G1,
    vk_beta_g2: VK_BETA_G2,
    vk_gamma_g2: VK_GAMMA_G2,
    vk_delta_g2: VK_DELTA_G2,
    vk_ic: VK_IC,
};
