/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  addDecoderSizePrefix,
  addEncoderSizePrefix,
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getAddressDecoder,
  getAddressEncoder,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  getUtf8Decoder,
  getUtf8Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
  type ReadonlyUint8Array,
} from '@solana/kit';

/**
 * Event emitted when an emergency stop is executed on a verifier
 *
 * # Fields
 * * `router` - The public key of the router account managing the verifier
 * * `selector` - A u32 that uniquely identifies the verifier entry in the router
 * * `verifier` - The public key of the verifier program being emergency stopped
 * * `triggered_by` - The public key of the account that initiated the emergency stop
 * * `reason` - A string explaining why the emergency stop was triggered
 */
export type EmergencyStopEvent = {
  router: Address;
  selector: ReadonlyUint8Array;
  verifier: Address;
  triggeredBy: Address;
  reason: string;
};

export type EmergencyStopEventArgs = EmergencyStopEvent;

export function getEmergencyStopEventEncoder(): Encoder<EmergencyStopEventArgs> {
  return getStructEncoder([
    ['router', getAddressEncoder()],
    ['selector', fixEncoderSize(getBytesEncoder(), 4)],
    ['verifier', getAddressEncoder()],
    ['triggeredBy', getAddressEncoder()],
    ['reason', addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())],
  ]);
}

export function getEmergencyStopEventDecoder(): Decoder<EmergencyStopEvent> {
  return getStructDecoder([
    ['router', getAddressDecoder()],
    ['selector', fixDecoderSize(getBytesDecoder(), 4)],
    ['verifier', getAddressDecoder()],
    ['triggeredBy', getAddressDecoder()],
    ['reason', addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())],
  ]);
}

export function getEmergencyStopEventCodec(): Codec<
  EmergencyStopEventArgs,
  EmergencyStopEvent
> {
  return combineCodec(
    getEmergencyStopEventEncoder(),
    getEmergencyStopEventDecoder()
  );
}
